apply plugin: 'java'
apply plugin: 'maven-publish'
apply plugin: 'jacoco'
apply plugin: 'war'

repositories {
    mavenLocal()
    mavenCentral()
}

jacoco {
    toolVersion = "0.8.8"
    reportsDir = file("$buildDir/customJacocoReportDir")
}

war {
    baseName = rootProject.name
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId findProperty('group')
            artifactId findProperty('name')
            version findProperty('version')

            from components.web
        }
    }
}

dependencies {
    implementation group: 'org.lankheet.domiot', name: 'domiot-datatypes', version: '0.7.0-SNAPSHOT'
//    implementation group: 'org.eclipse.paho', name: 'org.eclipse.paho.client.mqttv3', version: '1.2.5'
//    implementation group: 'io.swagger', name: 'swagger-annotations', version: '1.6.9'
//    implementation group: 'org.lankheet.domiot', name: 'domiot-rest-api', version: '1.1.0-SNAPSHOT'
//    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: '3.1.5'
    implementation group: 'org.springframework.integration', name: 'spring-integration-mqtt', version: '6.1.4'

//    implementation group: 'org.springframework.data', name: 'spring-data-jpa', version: '3.1.5'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation', version: '3.1.3'
//    implementation group: 'org.mariadb.jdbc', name: 'mariadb-java-client', version: '3.3.0'
    // jdbc:mariadb://localhost:3306/DB?user=root&password=myPassword
//    implementation group: 'mysql', name: 'mysql-connector-java', version: '8.0.32'
    implementation group: 'org.mapstruct', name: 'mapstruct', version: '1.5.3.Final'
    implementation group: 'org.projectlombok', name: 'lombok', version: '1.18.24'
    implementation group: 'org.projectlombok', name: 'lombok-mapstruct-binding', version: '0.2.0'
//    implementation group: 'org.flywaydb', name: 'flyway-mysql', version: '10.0.1'
    compileOnly group: 'org.slf4j', name: 'slf4j-api', version: '1.7.22'
//    implementation group: 'javax.validation', name: 'validation-api', version: '2.0.1.Final'

    testImplementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.22'
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter', version: '5.7.2'
    testImplementation group: 'org.mockito', name: 'mockito-junit-jupiter', version: '3.11.2'
    testImplementation group: 'org.mockito', name: 'mockito-inline', version: '3.11.2'
    testImplementation group: 'org.junit.platform', name: 'junit-platform-runner', version: '1.9.0'
    testImplementation 'org.hamcrest:hamcrest-junit:2.0.0.0'
}

test{
    // Workaround for using Gradle as executor of your unit tests
    useJUnitPlatform()
    ignoreFailures = !project.hasProperty('release')
    finalizedBy jacocoTestReport // report is always generated after tests run
}

jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
}


